/*!
        Copyright (C) CCL, CSR plc 2008
        All rights reserved

\file   slsi_wifi_p2p_fsm_definitions.h

\brief  FSM definitions.
        Contains code generated by fsmgen.pl, version 2D
*/

#ifndef _SLSI_WIFI_P2P_FSM_DEFINITIONS_H
#define _SLSI_WIFI_P2P_FSM_DEFINITIONS_H

#include "fsm.h"

/* Action function prototypes */
/*{{__FSM_MARKER(SLSI_WIFI_P2P, ACTION_FN_PROTOTYPES) */
extern FSM_ACTION_FN(p2p_fsm_handle_start);
extern FSM_ACTION_FN(p2p_fsm_handle_listen);
extern FSM_ACTION_FN(p2p_fsm_handle_find);
extern FSM_ACTION_FN(p2p_fsm_handle_connect_find_init);
extern FSM_ACTION_FN(p2p_fsm_handle_ignore);
extern FSM_ACTION_FN(p2p_fsm_handle_add_group);
extern FSM_ACTION_FN(p2p_fsm_handle_group_removed);
extern FSM_ACTION_FN(p2p_fsm_handle_stop);
extern FSM_ACTION_FN(p2p_fsm_handle_prov_disc);
extern FSM_ACTION_FN(p2p_fsm_handle_find_timeout);
extern FSM_ACTION_FN(p2p_fsm_handle_stop_listen);
extern FSM_ACTION_FN(p2p_fsm_handle_terminate);
extern FSM_ACTION_FN(p2p_fsm_handle_found);
extern FSM_ACTION_FN(p2p_fsm_handle_stop_find);
extern FSM_ACTION_FN(p2p_fsm_handle_terminate_stop_find);
extern FSM_ACTION_FN(p2p_fsm_handle_prov_disc_in_cont);
extern FSM_ACTION_FN(p2p_fsm_handle_neg_req);
extern FSM_ACTION_FN(p2p_fsm_handle_connect_in_fail);
extern FSM_ACTION_FN(p2p_fsm_handle_terminate_cancel);
extern FSM_ACTION_FN(p2p_fsm_handle_group_started);
extern FSM_ACTION_FN(p2p_fsm_handle_connected);
extern FSM_ACTION_FN(p2p_fsm_handle_connect_find_check);
extern FSM_ACTION_FN(p2p_fsm_handle_connect_find_success);
extern FSM_ACTION_FN(p2p_fsm_handle_connect_find_fail);
extern FSM_ACTION_FN(p2p_fsm_handle_connect_connect);
extern FSM_ACTION_FN(p2p_fsm_handle_prov_disc_cont);
extern FSM_ACTION_FN(p2p_fsm_handle_connect_fail);
extern FSM_ACTION_FN(p2p_fsm_handle_accept);
extern FSM_ACTION_FN(p2p_fsm_handle_neg_success);
extern FSM_ACTION_FN(p2p_fsm_handle_link_up);
extern FSM_ACTION_FN(p2p_fsm_handle_disconnect);
extern FSM_ACTION_FN(p2p_fsm_handle_disconnected);
extern FSM_ACTION_FN(p2p_fsm_handle_terminate_disconnect);
extern FSM_ACTION_FN(p2p_fsm_handle_link_down);
extern FSM_ACTION_FN(p2p_fsm_handle_group_created);
extern FSM_ACTION_FN(p2p_fsm_handle_remove_group);
extern FSM_ACTION_FN(p2p_fsm_handle_terminate_remove);
extern FSM_ACTION_FN(p2p_fsm_handle_user_accept);
extern FSM_ACTION_FN(p2p_fsm_handle_user_reject);
extern FSM_ACTION_FN(p2p_fsm_handle_disconnect_go);
extern FSM_ACTION_FN(p2p_fsm_handle_disconnected_go);
extern FSM_ACTION_FN(p2p_fsm_handle_terminate_disconnected);
/*}}__FSM_END_MARKER(SLSI_WIFI_P2P, ACTION_FN_PROTOTYPES) */

/* State definitions */
/*{{__FSM_MARKER(SLSI_WIFI_P2P, STATE_DECLARATIONS) */
#define P2P_ST_ST_MAX 21
#define P2P_ST_NULL                ((fsm32_state_t) 0)
#define P2P_ST_RUNNING             ((fsm32_state_t) 1)
#define P2P_ST_LISTENING           ((fsm32_state_t) 2)
#define P2P_ST_FINDING             ((fsm32_state_t) 3)
#define P2P_ST_CONNECT_IN_PROV     ((fsm32_state_t) 4)
#define P2P_ST_CONNECT_NEG         ((fsm32_state_t) 5)
#define P2P_ST_CONNECT_IN          ((fsm32_state_t) 6)
#define P2P_ST_CONNECT_OUT_FIND    ((fsm32_state_t) 7)
#define P2P_ST_CONNECT_OUT_PROV    ((fsm32_state_t) 8)
#define P2P_ST_CONNECT_OUT         ((fsm32_state_t) 9)
#define P2P_ST_CONNECT_WAIT_CONN   ((fsm32_state_t) 10)
#define P2P_ST_CONNECT_WAIT_GS     ((fsm32_state_t) 11)
#define P2P_ST_CONNECTED           ((fsm32_state_t) 12)
#define P2P_ST_DISCONNECTING       ((fsm32_state_t) 13)
#define P2P_ST_DISCONNECT_WAIT_GR  ((fsm32_state_t) 14)
#define P2P_ST_DISCONNECT_WAIT_DIS ((fsm32_state_t) 15)
#define P2P_ST_CREATING_GROUP      ((fsm32_state_t) 16)
#define P2P_ST_GROUP_OWNER         ((fsm32_state_t) 17)
#define P2P_ST_GO_CONNECT_IN       ((fsm32_state_t) 18)
#define P2P_ST_GO_CONNECTED        ((fsm32_state_t) 19)
#define P2P_ST_TERMINATING         ((fsm32_state_t) 20)
/*}}__FSM_END_MARKER(SLSI_WIFI_P2P, STATE_DECLARATIONS) */

/* Event definitions */
/* Include suppression of possible lint warnings for duplicate
 * definitions for FSM events that are defined with a fixed value
 * via the csv file [ they're duplicate; we don't care ] */
/*{{__FSM_MARKER(SLSI_WIFI_P2P, EVENT_DECLARATIONS) */
  /*lint -esym(760,P2P_EV_START) */
  /*lint -esym(962,P2P_EV_START) */
#define P2P_EV_START         ((fsm_event_t) 0)
  /*lint -esym(760,P2P_EV_LISTEN) */
  /*lint -esym(962,P2P_EV_LISTEN) */
#define P2P_EV_LISTEN        ((fsm_event_t) 1)
  /*lint -esym(760,P2P_EV_FIND) */
  /*lint -esym(962,P2P_EV_FIND) */
#define P2P_EV_FIND          ((fsm_event_t) 2)
  /*lint -esym(760,P2P_EV_CONNECT) */
  /*lint -esym(962,P2P_EV_CONNECT) */
#define P2P_EV_CONNECT       ((fsm_event_t) 3)
  /*lint -esym(760,P2P_EV_DISCONNECTED) */
  /*lint -esym(962,P2P_EV_DISCONNECTED) */
#define P2P_EV_DISCONNECTED  ((fsm_event_t) 4)
  /*lint -esym(760,P2P_EV_GO) */
  /*lint -esym(962,P2P_EV_GO) */
#define P2P_EV_GO            ((fsm_event_t) 5)
  /*lint -esym(760,P2P_EV_ADD_GROUP) */
  /*lint -esym(962,P2P_EV_ADD_GROUP) */
#define P2P_EV_ADD_GROUP     ((fsm_event_t) 6)
  /*lint -esym(760,P2P_EV_GROUP_REMOVED) */
  /*lint -esym(962,P2P_EV_GROUP_REMOVED) */
#define P2P_EV_GROUP_REMOVED ((fsm_event_t) 7)
  /*lint -esym(760,P2P_EV_STOP) */
  /*lint -esym(962,P2P_EV_STOP) */
#define P2P_EV_STOP          ((fsm_event_t) 8)
  /*lint -esym(760,P2P_EV_PROV_DISC) */
  /*lint -esym(962,P2P_EV_PROV_DISC) */
#define P2P_EV_PROV_DISC     ((fsm_event_t) 9)
  /*lint -esym(760,P2P_EV_TIMEOUT) */
  /*lint -esym(962,P2P_EV_TIMEOUT) */
#define P2P_EV_TIMEOUT       ((fsm_event_t) 10)
  /*lint -esym(760,P2P_EV_STOP_LISTEN) */
  /*lint -esym(962,P2P_EV_STOP_LISTEN) */
#define P2P_EV_STOP_LISTEN   ((fsm_event_t) 11)
  /*lint -esym(760,P2P_EV_FOUND) */
  /*lint -esym(962,P2P_EV_FOUND) */
#define P2P_EV_FOUND         ((fsm_event_t) 12)
  /*lint -esym(760,P2P_EV_STOP_FIND) */
  /*lint -esym(962,P2P_EV_STOP_FIND) */
#define P2P_EV_STOP_FIND     ((fsm_event_t) 13)
  /*lint -esym(760,P2P_EV_CONTINUE) */
  /*lint -esym(962,P2P_EV_CONTINUE) */
#define P2P_EV_CONTINUE      ((fsm_event_t) 14)
  /*lint -esym(760,P2P_EV_NEG_REQ) */
  /*lint -esym(962,P2P_EV_NEG_REQ) */
#define P2P_EV_NEG_REQ       ((fsm_event_t) 15)
  /*lint -esym(760,P2P_EV_CONNECT_FAIL) */
  /*lint -esym(962,P2P_EV_CONNECT_FAIL) */
#define P2P_EV_CONNECT_FAIL  ((fsm_event_t) 16)
  /*lint -esym(760,P2P_EV_GROUP_STARTED) */
  /*lint -esym(962,P2P_EV_GROUP_STARTED) */
#define P2P_EV_GROUP_STARTED ((fsm_event_t) 17)
  /*lint -esym(760,P2P_EV_CONNECTED) */
  /*lint -esym(962,P2P_EV_CONNECTED) */
#define P2P_EV_CONNECTED     ((fsm_event_t) 18)
  /*lint -esym(760,P2P_EV_FOUND_CORRECT) */
  /*lint -esym(962,P2P_EV_FOUND_CORRECT) */
#define P2P_EV_FOUND_CORRECT ((fsm_event_t) 19)
  /*lint -esym(760,P2P_EV_ACCEPT) */
  /*lint -esym(962,P2P_EV_ACCEPT) */
#define P2P_EV_ACCEPT        ((fsm_event_t) 20)
  /*lint -esym(760,P2P_EV_REJECT) */
  /*lint -esym(962,P2P_EV_REJECT) */
#define P2P_EV_REJECT        ((fsm_event_t) 21)
  /*lint -esym(760,P2P_EV_NEG_SUCCESS) */
  /*lint -esym(962,P2P_EV_NEG_SUCCESS) */
#define P2P_EV_NEG_SUCCESS   ((fsm_event_t) 22)
  /*lint -esym(760,P2P_EV_LINK_UP) */
  /*lint -esym(962,P2P_EV_LINK_UP) */
#define P2P_EV_LINK_UP       ((fsm_event_t) 23)
  /*lint -esym(760,P2P_EV_DISCONNECT) */
  /*lint -esym(962,P2P_EV_DISCONNECT) */
#define P2P_EV_DISCONNECT    ((fsm_event_t) 24)
  /*lint -esym(760,P2P_EV_REMOVE_GROUP) */
  /*lint -esym(962,P2P_EV_REMOVE_GROUP) */
#define P2P_EV_REMOVE_GROUP  ((fsm_event_t) 25)
  /*lint -esym(760,P2P_EV_CANCEL) */
  /*lint -esym(962,P2P_EV_CANCEL) */
#define P2P_EV_CANCEL        ((fsm_event_t) 26)
/*}}__FSM_END_MARKER(SLSI_WIFI_P2P, EVENT_DECLARATIONS) */

/* Event definitions */
/*{{__FSM_MARKER(SLSI_WIFI_P2P, EVENT_DECLARATIONS EXT1) */
/*}}__FSM_END_MARKER(SLSI_WIFI_P2P, EVENT_DECLARATIONS EXT1) */

/* Event range offsets */
/*{{__FSM_MARKER(SLSI_WIFI_P2P, EVENT_OFFSET_DECLARATIONS) */
/*}}__FSM_END_MARKER(SLSI_WIFI_P2P, EVENT_OFFSET_DECLARATIONS) */

/* Action function index */
/*{{__FSM_MARKER(SLSI_WIFI_P2P, ACTION_FN_INDEX) */
#define P2P_AC_MAX 42
#define P2P_AC_handle_start                  ((fsm32_action_t) 0)
#define P2P_AC_handle_listen                 ((fsm32_action_t) 1)
#define P2P_AC_handle_find                   ((fsm32_action_t) 2)
#define P2P_AC_handle_connect_find_init      ((fsm32_action_t) 3)
#define P2P_AC_handle_ignore                 ((fsm32_action_t) 4)
#define P2P_AC_handle_add_group              ((fsm32_action_t) 5)
#define P2P_AC_handle_group_removed          ((fsm32_action_t) 6)
#define P2P_AC_handle_stop                   ((fsm32_action_t) 7)
#define P2P_AC_handle_prov_disc              ((fsm32_action_t) 8)
#define P2P_AC_handle_find_timeout           ((fsm32_action_t) 9)
#define P2P_AC_handle_stop_listen            ((fsm32_action_t) 10)
#define P2P_AC_handle_terminate              ((fsm32_action_t) 11)
#define P2P_AC_handle_found                  ((fsm32_action_t) 12)
#define P2P_AC_handle_stop_find              ((fsm32_action_t) 13)
#define P2P_AC_handle_terminate_stop_find    ((fsm32_action_t) 14)
#define P2P_AC_handle_prov_disc_in_cont      ((fsm32_action_t) 15)
#define P2P_AC_handle_neg_req                ((fsm32_action_t) 16)
#define P2P_AC_handle_connect_in_fail        ((fsm32_action_t) 17)
#define P2P_AC_handle_terminate_cancel       ((fsm32_action_t) 18)
#define P2P_AC_handle_group_started          ((fsm32_action_t) 19)
#define P2P_AC_handle_connected              ((fsm32_action_t) 20)
#define P2P_AC_handle_connect_find_check     ((fsm32_action_t) 21)
#define P2P_AC_handle_connect_find_success   ((fsm32_action_t) 22)
#define P2P_AC_handle_connect_find_fail      ((fsm32_action_t) 23)
#define P2P_AC_handle_connect_connect        ((fsm32_action_t) 24)
#define P2P_AC_handle_prov_disc_cont         ((fsm32_action_t) 25)
#define P2P_AC_handle_connect_fail           ((fsm32_action_t) 26)
#define P2P_AC_handle_accept                 ((fsm32_action_t) 27)
#define P2P_AC_handle_neg_success            ((fsm32_action_t) 28)
#define P2P_AC_handle_link_up                ((fsm32_action_t) 29)
#define P2P_AC_handle_disconnect             ((fsm32_action_t) 30)
#define P2P_AC_handle_disconnected           ((fsm32_action_t) 31)
#define P2P_AC_handle_terminate_disconnect   ((fsm32_action_t) 32)
#define P2P_AC_handle_link_down              ((fsm32_action_t) 33)
#define P2P_AC_handle_group_created          ((fsm32_action_t) 34)
#define P2P_AC_handle_remove_group           ((fsm32_action_t) 35)
#define P2P_AC_handle_terminate_remove       ((fsm32_action_t) 36)
#define P2P_AC_handle_user_accept            ((fsm32_action_t) 37)
#define P2P_AC_handle_user_reject            ((fsm32_action_t) 38)
#define P2P_AC_handle_disconnect_go          ((fsm32_action_t) 39)
#define P2P_AC_handle_disconnected_go        ((fsm32_action_t) 40)
#define P2P_AC_handle_terminate_disconnected ((fsm32_action_t) 41)
#define P2P_AC_NULL (FSM32_ACTION_NULL)
/*}}__FSM_END_MARKER(SLSI_WIFI_P2P, ACTION_FN_INDEX) */

/* State machine definition */
/*{{__FSM_MARKER(SLSI_WIFI_P2P, FSM_DEFINITION) */
extern const FSM_SPARSE32_DEFINITION_T slsi_wifi_p2p_fsm;
/*}}__FSM_END_MARKER(SLSI_WIFI_P2P, FSM_DEFINITION) */

#endif /* _SLSI_WIFI_P2P_FSM_DEFINITIONS_H */

