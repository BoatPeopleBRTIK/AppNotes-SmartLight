FSM LM Sparse Definitions H Template
This template defines the format of the H file for the compact sparse FSM
engines definitions.


The following FSM variable names are valid and may be defined in the
configuration section of the state machine definition (using __FSM_VAR()):

    Variable            Description
    --------            -----------
    StatePrefix         Used to prefix all state names
    EventPrefix         Used to prefix all event names
    ActionNumPrefix     Used to prefix all action function index #defines
    ActionFnPrefix      Used to prefix all action function names

EventPrefix is used for offsets because offsets are really offsets for
events.

__FSM_START
/*!
        Copyright (C) CCL, CSR plc 2008
        All rights reserved

\file   __FSM_NAME_LOWER_fsm_definitions.h

\brief  FSM definitions.
        Contains code generated by __FSM_TOOL_NAME, version __FSM_TOOL_VERSION
*/

#ifndef ___FSM_OUTPUT_FILE_UPPER_H
#define ___FSM_OUTPUT_FILE_UPPER_H

#include "fsm.h"

/* Action function prototypes */
__FSM_MARKER(ACTION_FN_PROTOTYPES)
__FSM_FOR_ACTIONS
extern FSM_ACTION_FN(__FSM_VAR(ActionFnPrefix)__FSM_ACTION_NAME_LOWER);
__FSM_END_FOR
__FSM_END_MARKER

/* State definitions */
__FSM_MARKER(STATE_DECLARATIONS)
#define __FSM_VAR(Stateprefix)ST_MAX __FSM_NUM_STATES
__FSM_FOR_STATES
#define __FSM_VAR(StatePrefix)__FSM_STATE_NAME_UPPER __FSM_PAD_STATE((fsm32_state_t) __FSM_STATE_NO)
__FSM_END_FOR
__FSM_END_MARKER

/* Event definitions */
/* Include suppression of possible lint warnings for duplicate
 * definitions for FSM events that are defined with a fixed value
 * via the csv file [ they're duplicate; we don't care ] */
__FSM_MARKER(EVENT_DECLARATIONS)
__FSM_FOR_EVENTS_IN_CLASS()
  /*lint -esym(760,__FSM_VAR(EventPrefix)__FSM_EVENT_NAME_UPPER) */
  /*lint -esym(962,__FSM_VAR(EventPrefix)__FSM_EVENT_NAME_UPPER) */
#define __FSM_VAR(EventPrefix)__FSM_EVENT_NAME_UPPER __FSM_PAD_EVENT((fsm_event_t) __FSM_EVENT_NO)
__FSM_END_FOR
__FSM_END_MARKER

/* Event definitions */
__FSM_MARKER(EVENT_DECLARATIONS EXT1)
__FSM_FOR_EVENTS_IN_CLASS(EXT1)
#define __FSM_VAR(EventPrefix)__FSM_EVENT_NAME_UPPER __FSM_PAD_EVENT((fsm_event_t) __FSM_EVENT_NO)
__FSM_END_FOR
__FSM_END_MARKER

/* Event range offsets */
__FSM_MARKER(EVENT_OFFSET_DECLARATIONS)
__FSM_FOR_OFFSETS
#define __FSM_VAR(EventPrefix)__FSM_OFFSET_NAME_UPPER __FSM_PAD_OFFSET((fsm_event_t) __FSM_OFFSET_NO)
__FSM_END_FOR
__FSM_END_MARKER

/* Action function index */
__FSM_MARKER(ACTION_FN_INDEX)
#define __FSM_VAR(ActionNumPrefix)MAX __FSM_NUM_ACTIONS
__FSM_FOR_ACTIONS
#define __FSM_VAR(ActionNumPrefix)__FSM_ACTION_NAME_LOWER __FSM_PAD_ACTION((fsm32_action_t) __FSM_ACTION_NO)
__FSM_END_FOR
#define __FSM_VAR(ActionNumPrefix)NULL (FSM32_ACTION_NULL)
__FSM_END_MARKER

/* State machine definition */
__FSM_MARKER(FSM_DEFINITION)
extern const FSM_SPARSE32_DEFINITION_T __FSM_NAME_LOWER_fsm;
__FSM_END_MARKER

#endif /* ___FSM_OUTPUT_FILE_UPPER_H */

__FSM_END

